{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  motelItems: [],\n  isLoading: true,\n  error: \"\"\n};\nconst findMotelSlice = createSlice({\n  name: \"find motel\",\n  initialState,\n  reducers: {\n    getStart: state => {\n      state.isLoading = true;\n    },\n    getSuccess: (state, action) => {\n      state.isLoading = false;\n      state.motelItems = action.payload; // console.log(\"reducer: sent\");\n    },\n    getError: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    }\n  }\n});\nexport const {\n  getStart,\n  getSuccess,\n  getError\n} = findMotelSlice.actions;\nexport const findMotel = ({\n  name\n}) => async dispatch => {\n  dispatch(getStart());\n  const formData = new FormData();\n  formData.append(\"name\" + name);\n  const config = {\n    headers: {\n      \"content-type\": \"multipart/form-data\"\n    }\n  };\n\n  try {\n    dispatch(getStart);\n    const res = await axios.post(\"http://localhost:3000/\", formData, config);\n    dispatch(getSuccess(res.data));\n  } catch (err) {\n    dispatch(getError(err));\n  }\n};\nexport default findMotelSlice.reducer;","map":{"version":3,"sources":["/Users/khangtran/Documents/GitHub/Motel/client/src/reducers/Find.Reducer.js"],"names":["createSlice","axios","initialState","motelItems","isLoading","error","findMotelSlice","name","reducers","getStart","state","getSuccess","action","payload","getError","actions","findMotel","dispatch","formData","FormData","append","config","headers","res","post","data","err","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,EADO;AAEnBC,EAAAA,SAAS,EAAE,IAFQ;AAGnBC,EAAAA,KAAK,EAAE;AAHY,CAArB;AAMA,MAAMC,cAAc,GAAGN,WAAW,CAAC;AACjCO,EAAAA,IAAI,EAAE,YAD2B;AAEjCL,EAAAA,YAFiC;AAGjCM,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,EAAGC,KAAD,IAAW;AACnBA,MAAAA,KAAK,CAACN,SAAN,GAAkB,IAAlB;AACD,KAHO;AAIRO,IAAAA,UAAU,EAAE,CAACD,KAAD,EAAQE,MAAR,KAAmB;AAC7BF,MAAAA,KAAK,CAACN,SAAN,GAAkB,KAAlB;AACAM,MAAAA,KAAK,CAACP,UAAN,GAAmBS,MAAM,CAACC,OAA1B,CAF6B,CAG7B;AACD,KARO;AASRC,IAAAA,QAAQ,EAAE,CAACJ,KAAD,EAAQE,MAAR,KAAmB;AAC3BF,MAAAA,KAAK,CAACN,SAAN,GAAkB,KAAlB;AACAM,MAAAA,KAAK,CAACL,KAAN,GAAcO,MAAM,CAACC,OAArB;AACD;AAZO;AAHuB,CAAD,CAAlC;AAmBA,OAAO,MAAM;AAAEJ,EAAAA,QAAF;AAAYE,EAAAA,UAAZ;AAAwBG,EAAAA;AAAxB,IAAqCR,cAAc,CAACS,OAA1D;AAEP,OAAO,MAAMC,SAAS,GACpB,CAAC;AAAET,EAAAA;AAAF,CAAD,KACA,MAAOU,QAAP,IAAoB;AAClBA,EAAAA,QAAQ,CAACR,QAAQ,EAAT,CAAR;AACA,QAAMS,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,EAAAA,QAAQ,CAACE,MAAT,CAAgB,SAASb,IAAzB;AACA,QAAMc,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB;AADI,GAAf;;AAGA,MAAI;AACFL,IAAAA,QAAQ,CAACR,QAAD,CAAR;AACA,UAAMc,GAAG,GAAG,MAAMtB,KAAK,CAACuB,IAAN,CAAW,wBAAX,EAAqCN,QAArC,EAA+CG,MAA/C,CAAlB;AACAJ,IAAAA,QAAQ,CAACN,UAAU,CAACY,GAAG,CAACE,IAAL,CAAX,CAAR;AACD,GAJD,CAIE,OAAOC,GAAP,EAAY;AACZT,IAAAA,QAAQ,CAACH,QAAQ,CAACY,GAAD,CAAT,CAAR;AACD;AACF,CAhBI;AAkBP,eAAepB,cAAc,CAACqB,OAA9B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst initialState = {\n  motelItems: [],\n  isLoading: true,\n  error: \"\",\n};\n\nconst findMotelSlice = createSlice({\n  name: \"find motel\",\n  initialState,\n  reducers: {\n    getStart: (state) => {\n      state.isLoading = true;\n    },\n    getSuccess: (state, action) => {\n      state.isLoading = false;\n      state.motelItems = action.payload;\n      // console.log(\"reducer: sent\");\n    },\n    getError: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n  },\n});\n\nexport const { getStart, getSuccess, getError } = findMotelSlice.actions;\n\nexport const findMotel =\n  ({ name }) =>\n  async (dispatch) => {\n    dispatch(getStart());\n    const formData = new FormData();\n    formData.append(\"name\" + name);\n    const config = {\n      headers: { \"content-type\": \"multipart/form-data\" },\n    };\n    try {\n      dispatch(getStart);\n      const res = await axios.post(\"http://localhost:3000/\", formData, config);\n      dispatch(getSuccess(res.data));\n    } catch (err) {\n      dispatch(getError(err));\n    }\n  };\n\nexport default findMotelSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}
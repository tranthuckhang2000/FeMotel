{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\"; // import { loadChartPrice } from \"../../apis/search/price\";\n\nconst initialState = {\n  // nameTicker: [],\n  technique: {},\n  isLoading: true,\n  error: \"\"\n};\nconst techniqueSlice = createSlice({\n  name: \"technique\",\n  initialState,\n  reducers: {\n    // khi bắt đầu lấy dữ liệu\n    getTechniqueStart: state => {\n      state.isLoading = true;\n    },\n    // khi lấy dữ liệu thành công\n    getTechniqueSuccess: (state, action) => {\n      state.isLoading = false; // Object.assign(state.technique, action.payload)\n\n      state.technique = action.payload; // state.technique = optionsPrice;\n    },\n    // khi lấy dữ liệu thất bại\n    getTechniqueFailure: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    }\n  }\n});\nexport const {\n  getTechniqueStart,\n  getTechniqueSuccess,\n  getTechniqueFailure\n} = techniqueSlice.actions;\nexport const fetchTechnique = ({\n  nameTicker\n}) => async dispatch => {\n  try {\n    dispatch(getTechniqueStart());\n    const res = await axios.get(`http://localhost:3000/api/searchTechnique/${nameTicker}`, {\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\"\n      }\n    });\n    dispatch(getTechniqueSuccess(res.data));\n  } catch (err) {\n    dispatch(getTechniqueFailure(err)); // console.log(err);\n  }\n};\nexport default techniqueSlice.reducer;","map":{"version":3,"sources":["/Users/khangtran/Documents/GitHub/helmet/client/src/reducers/technique.Reducer.js"],"names":["createSlice","axios","initialState","technique","isLoading","error","techniqueSlice","name","reducers","getTechniqueStart","state","getTechniqueSuccess","action","payload","getTechniqueFailure","actions","fetchTechnique","nameTicker","dispatch","res","get","headers","data","err","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACA,MAAMC,YAAY,GAAG;AACnB;AACAC,EAAAA,SAAS,EAAE,EAFQ;AAGnBC,EAAAA,SAAS,EAAE,IAHQ;AAInBC,EAAAA,KAAK,EAAE;AAJY,CAArB;AAOA,MAAMC,cAAc,GAAGN,WAAW,CAAC;AACjCO,EAAAA,IAAI,EAAE,WAD2B;AAEjCL,EAAAA,YAFiC;AAGjCM,EAAAA,QAAQ,EAAE;AACR;AACAC,IAAAA,iBAAiB,EAAGC,KAAD,IAAW;AAC5BA,MAAAA,KAAK,CAACN,SAAN,GAAkB,IAAlB;AACD,KAJO;AAKR;AACAO,IAAAA,mBAAmB,EAAE,CAACD,KAAD,EAAQE,MAAR,KAAmB;AACtCF,MAAAA,KAAK,CAACN,SAAN,GAAkB,KAAlB,CADsC,CAEtC;;AACAM,MAAAA,KAAK,CAACP,SAAN,GAAkBS,MAAM,CAACC,OAAzB,CAHsC,CAItC;AACD,KAXO;AAYR;AACAC,IAAAA,mBAAmB,EAAE,CAACJ,KAAD,EAAQE,MAAR,KAAmB;AACtCF,MAAAA,KAAK,CAACN,SAAN,GAAkB,KAAlB;AACAM,MAAAA,KAAK,CAACL,KAAN,GAAcO,MAAM,CAACC,OAArB;AACD;AAhBO;AAHuB,CAAD,CAAlC;AAuBA,OAAO,MAAM;AAAEJ,EAAAA,iBAAF;AAAqBE,EAAAA,mBAArB;AAA0CG,EAAAA;AAA1C,IACXR,cAAc,CAACS,OADV;AAGP,OAAO,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB,MAAOC,QAAP,IAAoB;AAClE,MAAI;AACFA,IAAAA,QAAQ,CAACT,iBAAiB,EAAlB,CAAR;AACA,UAAMU,GAAG,GAAG,MAAMlB,KAAK,CAACmB,GAAN,CACf,6CAA4CH,UAAW,EADxC,EAEhB;AACEI,MAAAA,OAAO,EAAE;AAAE,uCAA+B;AAAjC;AADX,KAFgB,CAAlB;AAOAH,IAAAA,QAAQ,CAACP,mBAAmB,CAACQ,GAAG,CAACG,IAAL,CAApB,CAAR;AAED,GAXD,CAWE,OAAOC,GAAP,EAAY;AACZL,IAAAA,QAAQ,CAACJ,mBAAmB,CAACS,GAAD,CAApB,CAAR,CADY,CAEZ;AACD;AACF,CAhBI;AAkBP,eAAejB,cAAc,CAACkB,OAA9B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n// import { loadChartPrice } from \"../../apis/search/price\";\nconst initialState = {\n  // nameTicker: [],\n  technique: {},\n  isLoading: true,\n  error: \"\",\n};\n\nconst techniqueSlice = createSlice({\n  name: \"technique\",\n  initialState,\n  reducers: {\n    // khi bắt đầu lấy dữ liệu\n    getTechniqueStart: (state) => {\n      state.isLoading = true;\n    },\n    // khi lấy dữ liệu thành công\n    getTechniqueSuccess: (state, action) => {\n      state.isLoading = false;\n      // Object.assign(state.technique, action.payload)\n      state.technique = action.payload;\n      // state.technique = optionsPrice;\n    },\n    // khi lấy dữ liệu thất bại\n    getTechniqueFailure: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n  },\n});\n\nexport const { getTechniqueStart, getTechniqueSuccess, getTechniqueFailure } =\n  techniqueSlice.actions;\n\nexport const fetchTechnique = ({ nameTicker }) => async (dispatch) => {\n    try {\n      dispatch(getTechniqueStart());\n      const res = await axios.get(\n        `http://localhost:3000/api/searchTechnique/${nameTicker}`,\n        {\n          headers: { \"Access-Control-Allow-Origin\": \"*\" },\n        }\n      );\n\n      dispatch(getTechniqueSuccess(res.data));\n\n    } catch (err) {\n      dispatch(getTechniqueFailure(err))\n      // console.log(err);\n    }\n  };\n\nexport default techniqueSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}
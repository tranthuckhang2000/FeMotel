{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  statusEnterOtp: \"\",\n  isLoading: true,\n  error: \"\"\n};\nconst enterOtpSlice = createSlice({\n  name: \"enterOtp\",\n  initialState,\n  reducers: {\n    getStart: state => {\n      state.isLoading = true;\n    },\n    getSuccess: (state, action) => {\n      state.statusEnterOtp = action.payload;\n      state.isLoading = false;\n    },\n    getError: (state, action) => {\n      state.error = action.payload;\n      state.isLoading = false;\n    }\n  }\n});\nexport const {\n  getStart,\n  getSuccess,\n  getError\n} = enterOtpSlice.actions;\nexport const sendOtp = ({\n  email\n}) => async dispatch => {\n  console.log(\"email reducer:\" + email);\n  dispatch(getStart());\n  let formData = new FormData(); //form data object\n\n  formData.append(\"email\", email); //append the values with key, value pair\n\n  const config = {\n    headers: {\n      \"content-type\": \"multipart/form-data\"\n    }\n  };\n\n  try {\n    dispatch(getStart);\n    const res = await axios.post(\"http://localhost:3000/logup/sendOtp\", formData, config);\n    dispatch(getSuccess(res.data));\n  } catch (err) {\n    dispatch(getError(err));\n  }\n};\nexport const checkOtp = ({\n  email,\n  otp\n}) => async dispatch => {\n  let formData = new FormData(); //form data object\n\n  formData.append(\"email\", email); //append the values with key, value pair\n\n  formData.append(\"otp\", otp); //append the values with key, value pair\n\n  console.log(\"form data otp: \" + otp);\n  console.log(\"form data email: \" + email);\n  const config = {\n    headers: {\n      \"content-type\": \"multipart/form-data\"\n    }\n  };\n\n  try {\n    dispatch(getStart);\n    const res = await axios.post(\"http://localhost:3000/logup/checkOtp/\", formData, config);\n    dispatch(getSuccess(res.data));\n    console.log(state);\n  } catch (err) {\n    dispatch(getError(err));\n  }\n};\nexport default enterOtpSlice.reducer;","map":{"version":3,"sources":["/Users/khangtran/Documents/GitHub/helmet/client/src/reducers/account/enterOtp.Reducer.js"],"names":["createSlice","axios","initialState","statusEnterOtp","isLoading","error","enterOtpSlice","name","reducers","getStart","state","getSuccess","action","payload","getError","actions","sendOtp","email","dispatch","console","log","formData","FormData","append","config","headers","res","post","data","err","checkOtp","otp","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst initialState = {\n  statusEnterOtp: \"\",\n  isLoading: true,\n  error: \"\",\n};\n\nconst enterOtpSlice = createSlice({\n  name: \"enterOtp\",\n  initialState,\n  reducers: {\n    getStart: (state) => {\n      state.isLoading = true;\n    },\n    getSuccess: (state, action) => {\n      state.statusEnterOtp = action.payload;\n      state.isLoading = false;\n    },\n    getError: (state, action) => {\n      state.error = action.payload;\n      state.isLoading = false;\n    },\n  },\n});\n\nexport const { getStart, getSuccess, getError } = enterOtpSlice.actions;\n\nexport const sendOtp =\n  ({ email }) =>\n  async (dispatch) => {\n    console.log(\"email reducer:\" + email);\n    dispatch(getStart());\n    let formData = new FormData(); //form data object\n    formData.append(\"email\", email); //append the values with key, value pair\n\n    const config = {\n      headers: { \"content-type\": \"multipart/form-data\" },\n    };\n\n    try {\n      dispatch(getStart);\n      const res = await axios.post(\n        \"http://localhost:3000/logup/sendOtp\",\n        formData,\n        config\n      );\n      dispatch(getSuccess(res.data));\n    } catch (err) {\n      dispatch(getError(err));\n    }\n  };\n\nexport const checkOtp =\n  ({ email, otp }) =>\n  async (dispatch) => {\n    let formData = new FormData(); //form data object\n    formData.append(\"email\", email); //append the values with key, value pair\n    formData.append(\"otp\", otp); //append the values with key, value pair\n    console.log(\"form data otp: \" + otp);\n    console.log(\"form data email: \" + email);\n\n    const config = {\n      headers: { \"content-type\": \"multipart/form-data\" },\n    };\n\n    try {\n      dispatch(getStart);\n      const res = await axios.post(\n        \"http://localhost:3000/logup/checkOtp/\",\n        formData,\n        config\n      );\n      dispatch(getSuccess(res.data));\n      console.log(state);\n    } catch (err) {\n      dispatch(getError(err));\n    }\n  };\nexport default enterOtpSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}
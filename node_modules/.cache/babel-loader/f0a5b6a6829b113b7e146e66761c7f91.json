{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  statusMail: \"\",\n  isLoading: true,\n  error: \"\"\n};\nconst enterMailSlice = createSlice({\n  name: \"enterMail\",\n  initialState,\n  reducers: {\n    getStart: state => {\n      state.isLoading = true;\n    },\n    getSuccess: (state, action) => {\n      state.isLoading = false;\n      state.statusp = action.payload; // console.log(\"reducer: sent\");\n    },\n    getError: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    }\n  }\n});\nexport const {\n  getStart,\n  getSuccess,\n  getError\n} = enterMailSlice.actions;\nexport const sendOtp = ({\n  email\n}) => async dispatch => {\n  console.log(\"email reducer:\" + email);\n  dispatch(getStart());\n  let formData = new FormData(); //formdata object\n\n  formData.append(\"email\", email); //append the values with key, value pair\n\n  const config = {\n    headers: {\n      \"content-type\": \"multipart/form-data\"\n    }\n  };\n\n  try {\n    dispatch(getStart);\n    const res = await axios.post(\"http://localhost:3000/logup/sendOtp\", formData, config);\n    dispatch(getSuccess(res.data));\n  } catch (err) {\n    dispatch(getError(err));\n  }\n};\nexport default enterMailSlice.reducer;","map":{"version":3,"sources":["/Users/khangtran/Documents/GitHub/helmet/client/src/reducers/account/enterMail.Reducer.js"],"names":["createSlice","axios","initialState","statusMail","isLoading","error","enterMailSlice","name","reducers","getStart","state","getSuccess","action","statusp","payload","getError","actions","sendOtp","email","dispatch","console","log","formData","FormData","append","config","headers","res","post","data","err","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,EADO;AAEnBC,EAAAA,SAAS,EAAE,IAFQ;AAGnBC,EAAAA,KAAK,EAAE;AAHY,CAArB;AAMA,MAAMC,cAAc,GAAGN,WAAW,CAAC;AAC/BO,EAAAA,IAAI,EAAE,WADyB;AAE/BL,EAAAA,YAF+B;AAG/BM,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,EAAGC,KAAD,IAAW;AACnBA,MAAAA,KAAK,CAACN,SAAN,GAAkB,IAAlB;AACD,KAHO;AAIRO,IAAAA,UAAU,EAAE,CAACD,KAAD,EAAQE,MAAR,KAAmB;AAC7BF,MAAAA,KAAK,CAACN,SAAN,GAAkB,KAAlB;AACAM,MAAAA,KAAK,CAACG,OAAN,GAAgBD,MAAM,CAACE,OAAvB,CAF6B,CAG7B;AACD,KARO;AASRC,IAAAA,QAAQ,EAAE,CAACL,KAAD,EAAQE,MAAR,KAAmB;AAC3BF,MAAAA,KAAK,CAACN,SAAN,GAAkB,KAAlB;AACAM,MAAAA,KAAK,CAACL,KAAN,GAAcO,MAAM,CAACE,OAArB;AACD;AAZO;AAHqB,CAAD,CAAlC;AAmBA,OAAO,MAAM;AAAEL,EAAAA,QAAF;AAAYE,EAAAA,UAAZ;AAAwBI,EAAAA;AAAxB,IAAqCT,cAAc,CAACU,OAA1D;AAEP,OAAO,MAAMC,OAAO,GAClB,CAAC;AAAEC,EAAAA;AAAF,CAAD,KACA,MAAOC,QAAP,IAAoB;AAClBC,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmBH,KAA/B;AACAC,EAAAA,QAAQ,CAACV,QAAQ,EAAT,CAAR;AACA,MAAIa,QAAQ,GAAG,IAAIC,QAAJ,EAAf,CAHkB,CAGa;;AAC/BD,EAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBN,KAAzB,EAJkB,CAIe;;AAEjC,QAAMO,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB;AADI,GAAf;;AAIA,MAAI;AACFP,IAAAA,QAAQ,CAACV,QAAD,CAAR;AACA,UAAMkB,GAAG,GAAG,MAAM1B,KAAK,CAAC2B,IAAN,CAChB,qCADgB,EAEhBN,QAFgB,EAGhBG,MAHgB,CAAlB;AAKAN,IAAAA,QAAQ,CAACR,UAAU,CAACgB,GAAG,CAACE,IAAL,CAAX,CAAR;AACD,GARD,CAQE,OAAOC,GAAP,EAAY;AACZX,IAAAA,QAAQ,CAACJ,QAAQ,CAACe,GAAD,CAAT,CAAR;AACD;AACF,CAvBI;AAyBP,eAAexB,cAAc,CAACyB,OAA9B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst initialState = {\n  statusMail: \"\",\n  isLoading: true,\n  error: \"\",\n};\n\nconst enterMailSlice = createSlice({\n    name: \"enterMail\",\n    initialState,\n    reducers: {\n      getStart: (state) => {\n        state.isLoading = true;\n      },\n      getSuccess: (state, action) => {\n        state.isLoading = false;\n        state.statusp = action.payload;\n        // console.log(\"reducer: sent\");\n      },\n      getError: (state, action) => {\n        state.isLoading = false;\n        state.error = action.payload;\n      },\n    },\n});\n\nexport const { getStart, getSuccess, getError } = enterMailSlice.actions;\n\nexport const sendOtp =\n  ({ email }) =>\n  async (dispatch) => {\n    console.log(\"email reducer:\" + email);\n    dispatch(getStart());\n    let formData = new FormData(); //formdata object\n    formData.append(\"email\", email); //append the values with key, value pair\n\n    const config = {\n      headers: { \"content-type\": \"multipart/form-data\" },\n    };\n\n    try {\n      dispatch(getStart);\n      const res = await axios.post(\n        \"http://localhost:3000/logup/sendOtp\",\n        formData,\n        config\n      );\n      dispatch(getSuccess(res.data));\n    } catch (err) {\n      dispatch(getError(err));\n    }\n  };\n\nexport default enterMailSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst path = \"http://localhost:3000/\";\nconst initialState = {\n  listAccount: [],\n  isLoading: true,\n  error: \"\",\n  accountAvailable: false\n};\nconst productSlice = createSlice({\n  name: \"product\",\n  initialState,\n  reducers: {\n    getStart: state => {\n      state.isLoading = true;\n    },\n    getSuccess: (state, action) => {\n      state.isLoading = false;\n      state.listAccount = action.payload; // console.log(\"reducer: sent\");\n    },\n    getError: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    }\n  }\n});\nexport const {\n  getStart,\n  getError,\n  getSuccess,\n  checkAccountAvailableFalse,\n  checkAccountAvailableTrue\n} = productSlice.actions;\nexport const saveAccount = (fullName, email, phone, pass) => async dispatch => {\n  try {\n    dispatch(getStart());\n    const obj = {\n      name: \"Ha Anh Tuan\",\n      job: \"single\",\n      old: 37\n    };\n    const res = await axios({\n      method: \"post\",\n      url: `${path}accounts`,\n      data: {\n        fullName,\n        email,\n        phone,\n        pass\n      }\n    });\n    dispatch(getSuccess(res.data));\n    console.log(res.data);\n  } catch (err) {\n    dispatch(getError(err));\n  }\n};\nexport const getAllAccount = () => async dispatch => {\n  try {\n    dispatch(getStart());\n    const res = await axios.get(\"http://localhost:3000/accounts\", {});\n    dispatch(getSuccess(res.data));\n  } catch (err) {\n    dispatch(getError(err));\n  }\n};\nexport default productSlice.reducer;","map":{"version":3,"sources":["/Users/khangtran/Documents/GitHub/Motel/client/src/reducers/Account.Reducer.js"],"names":["createSlice","axios","path","initialState","listAccount","isLoading","error","accountAvailable","productSlice","name","reducers","getStart","state","getSuccess","action","payload","getError","checkAccountAvailableFalse","checkAccountAvailableTrue","actions","saveAccount","fullName","email","phone","pass","dispatch","obj","job","old","res","method","url","data","console","log","err","getAllAccount","get","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,MAAMC,IAAI,GAAG,wBAAb;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE,EADM;AAEnBC,EAAAA,SAAS,EAAE,IAFQ;AAGnBC,EAAAA,KAAK,EAAE,EAHY;AAInBC,EAAAA,gBAAgB,EAAE;AAJC,CAArB;AAOA,MAAMC,YAAY,GAAGR,WAAW,CAAC;AAC/BS,EAAAA,IAAI,EAAE,SADyB;AAE/BN,EAAAA,YAF+B;AAG/BO,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,EAAGC,KAAD,IAAW;AACnBA,MAAAA,KAAK,CAACP,SAAN,GAAkB,IAAlB;AACD,KAHO;AAIRQ,IAAAA,UAAU,EAAE,CAACD,KAAD,EAAQE,MAAR,KAAmB;AAC7BF,MAAAA,KAAK,CAACP,SAAN,GAAkB,KAAlB;AACAO,MAAAA,KAAK,CAACR,WAAN,GAAoBU,MAAM,CAACC,OAA3B,CAF6B,CAG7B;AACD,KARO;AASRC,IAAAA,QAAQ,EAAE,CAACJ,KAAD,EAAQE,MAAR,KAAmB;AAC3BF,MAAAA,KAAK,CAACP,SAAN,GAAkB,KAAlB;AACAO,MAAAA,KAAK,CAACN,KAAN,GAAcQ,MAAM,CAACC,OAArB;AACD;AAZO;AAHqB,CAAD,CAAhC;AAmBA,OAAO,MAAM;AACXJ,EAAAA,QADW;AAEXK,EAAAA,QAFW;AAGXH,EAAAA,UAHW;AAIXI,EAAAA,0BAJW;AAKXC,EAAAA;AALW,IAMTV,YAAY,CAACW,OANV;AAQP,OAAO,MAAMC,WAAW,GACtB,CAACC,QAAD,EAAWC,KAAX,EAAkBC,KAAlB,EAAyBC,IAAzB,KAAkC,MAAOC,QAAP,IAAoB;AACpD,MAAI;AACFA,IAAAA,QAAQ,CAACd,QAAQ,EAAT,CAAR;AACA,UAAMe,GAAG,GAAG;AACVjB,MAAAA,IAAI,EAAE,aADI;AAEVkB,MAAAA,GAAG,EAAE,QAFK;AAGVC,MAAAA,GAAG,EAAE;AAHK,KAAZ;AAKA,UAAMC,GAAG,GAAG,MAAM5B,KAAK,CAAC;AACtB6B,MAAAA,MAAM,EAAE,MADc;AAEtBC,MAAAA,GAAG,EAAG,GAAE7B,IAAK,UAFS;AAGtB8B,MAAAA,IAAI,EAAE;AACJX,QAAAA,QADI;AAEJC,QAAAA,KAFI;AAGJC,QAAAA,KAHI;AAIJC,QAAAA;AAJI;AAHgB,KAAD,CAAvB;AAUAC,IAAAA,QAAQ,CAACZ,UAAU,CAACgB,GAAG,CAACG,IAAL,CAAX,CAAR;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,GAAG,CAACG,IAAhB;AACD,GAnBD,CAmBE,OAAOG,GAAP,EAAY;AACZV,IAAAA,QAAQ,CAACT,QAAQ,CAACmB,GAAD,CAAT,CAAR;AACD;AACF,CAxBI;AAyBP,OAAO,MAAMC,aAAa,GAAG,MAAM,MAAOX,QAAP,IAAoB;AACrD,MAAI;AACFA,IAAAA,QAAQ,CAACd,QAAQ,EAAT,CAAR;AACA,UAAMkB,GAAG,GAAG,MAAM5B,KAAK,CAACoC,GAAN,CAAU,gCAAV,EAA4C,EAA5C,CAAlB;AACAZ,IAAAA,QAAQ,CAACZ,UAAU,CAACgB,GAAG,CAACG,IAAL,CAAX,CAAR;AACD,GAJD,CAIE,OAAOG,GAAP,EAAY;AACZV,IAAAA,QAAQ,CAACT,QAAQ,CAACmB,GAAD,CAAT,CAAR;AACD;AACF,CARM;AAYP,eAAe3B,YAAY,CAAC8B,OAA5B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst path = \"http://localhost:3000/\";\nconst initialState = {\n  listAccount: [],\n  isLoading: true,\n  error: \"\",\n  accountAvailable: false,\n};\n\nconst productSlice = createSlice({\n  name: \"product\",\n  initialState,\n  reducers: {\n    getStart: (state) => {\n      state.isLoading = true;\n    },\n    getSuccess: (state, action) => {\n      state.isLoading = false;\n      state.listAccount = action.payload;\n      // console.log(\"reducer: sent\");\n    },\n    getError: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n  },\n});\n\nexport const {\n  getStart,\n  getError,\n  getSuccess,\n  checkAccountAvailableFalse,\n  checkAccountAvailableTrue,\n} = productSlice.actions;\n\nexport const saveAccount =\n  (fullName, email, phone, pass) => async (dispatch) => {\n    try {\n      dispatch(getStart());\n      const obj = {\n        name: \"Ha Anh Tuan\",\n        job: \"single\",\n        old: 37,\n      };\n      const res = await axios({\n        method: \"post\",\n        url: `${path}accounts`,\n        data: {\n          fullName,\n          email,\n          phone,\n          pass,\n        },\n      });\n      dispatch(getSuccess(res.data));\n      console.log(res.data);\n    } catch (err) {\n      dispatch(getError(err));\n    }\n  };\nexport const getAllAccount = () => async (dispatch) => {\n  try {\n    dispatch(getStart());\n    const res = await axios.get(\"http://localhost:3000/accounts\", {});\n    dispatch(getSuccess(res.data));\n  } catch (err) {\n    dispatch(getError(err));\n  }\n};\n\n\n\nexport default productSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  statusLogUp: \"\",\n  isLoading: true,\n  error: \"\"\n};\nconst logUpSlice = createSlice({\n  name: \"logUp\",\n  initialState,\n  reducers: {\n    getStart: state => {\n      state.isLoading = true;\n    },\n    getSuccess: (state, action) => {\n      state.isLoading = false;\n      state.statusLogUp = action.payload;\n    },\n    getError: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    }\n  }\n});\nexport const {\n  getStart,\n  getError,\n  getSuccess\n} = logUpSlice.actions;\nexport const sendOtp = ({\n  email\n}) => async dispatch => {\n  console.log('email reducer:' + email);\n  dispatch(getS); // let formData = new FormData(); //formdata object\n  // formData.append(\"email\", email); //append the values with key, value pair\n  // const config = {\n  //   headers: { \"content-type\": \"multipart/form-data\" },\n  // };\n  // try {\n  //   dispatch(getStart);\n  //   const res = await axios.post(\n  //     \"http://localhost:3000/logup/sendOtp\",\n  //     formData,\n  //     config\n  //   );\n  //   dispatch(getSuccess(res.data));\n  // } catch (err) {\n  //   dispatch(getError(err));\n  // }\n};\nexport const checkOtp = ({\n  otp\n}) => async dispatch => {\n  let formData = new FormData(); //formdata object\n\n  formData.append(\"otp\", otp); //append the values with key, value pair\n\n  const config = {\n    headers: {\n      \"content-type\": \"multipart/form-data\"\n    }\n  };\n\n  try {\n    dispatch(getStart);\n    const res = await axios.post(\"http://localhost:3000/logup/checkOtp/\", formData, config);\n    dispatch(getSuccess(res.data));\n  } catch (err) {\n    dispatch(getError(err));\n  }\n};\nexport const logUp = ({\n  otp,\n  email,\n  fullName\n}) => async dispatch => {\n  let formData = new FormData(); //formdata object\n\n  formData.append(\"fullName\", fullName);\n  formData.append(\"email\", email);\n  formData.append(\"otp\", otp); //append the values with key, value pair\n\n  const config = {\n    headers: {\n      \"content-type\": \"multipart/form-data\"\n    }\n  };\n\n  try {\n    dispatch(getStart);\n    const res = await axios.post(\"http://localhost:3000/logup/checkOtp/\", formData, config);\n    dispatch(getSuccess(res.data));\n  } catch (err) {\n    dispatch(getError(err));\n  }\n};\nexport default logUpSlice.reducer;","map":{"version":3,"sources":["/Users/khangtran/Documents/GitHub/helmet/client/src/reducers/account/logUp.Reducer.js"],"names":["createSlice","axios","initialState","statusLogUp","isLoading","error","logUpSlice","name","reducers","getStart","state","getSuccess","action","payload","getError","actions","sendOtp","email","dispatch","console","log","getS","checkOtp","otp","formData","FormData","append","config","headers","res","post","data","err","logUp","fullName","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst initialState = {\n  statusLogUp: \"\",\n  isLoading: true,\n  error: \"\",\n};\n\nconst logUpSlice = createSlice({\n  name: \"logUp\",\n  initialState,\n  reducers: {\n    getStart: (state) => {\n      state.isLoading = true;\n    },\n    getSuccess: (state, action) => {\n      state.isLoading = false;\n      state.statusLogUp = action.payload;\n    },\n    getError: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n  },\n});\n\nexport const { getStart, getError, getSuccess } = logUpSlice.actions;\n\nexport const sendOtp = ({email}) => async (dispatch) => {\n    console.log('email reducer:' + email);\n    dispatch(getS);\n    // let formData = new FormData(); //formdata object\n    // formData.append(\"email\", email); //append the values with key, value pair\n\n    // const config = {\n    //   headers: { \"content-type\": \"multipart/form-data\" },\n    // };\n\n    // try {\n    //   dispatch(getStart);\n    //   const res = await axios.post(\n    //     \"http://localhost:3000/logup/sendOtp\",\n    //     formData,\n    //     config\n    //   );\n    //   dispatch(getSuccess(res.data));\n    // } catch (err) {\n    //   dispatch(getError(err));\n    // }\n  };\n\nexport const checkOtp =\n  ({ otp }) =>\n  async (dispatch) => {\n    let formData = new FormData(); //formdata object\n    formData.append(\"otp\", otp); //append the values with key, value pair\n\n    const config = {\n      headers: { \"content-type\": \"multipart/form-data\" },\n    };\n\n    try {\n      dispatch(getStart);\n      const res = await axios.post(\n        \"http://localhost:3000/logup/checkOtp/\",\n        formData,\n        config\n      );\n      dispatch(getSuccess(res.data));\n    } catch (err) {\n      dispatch(getError(err));\n    }\n  };\n\nexport const logUp =\n  ({ otp, email, fullName }) =>\n  async (dispatch) => {\n    let formData = new FormData(); //formdata object\n    formData.append(\"fullName\", fullName);\n    formData.append(\"email\", email);\n    formData.append(\"otp\", otp);\n    //append the values with key, value pair\n\n    const config = {\n      headers: { \"content-type\": \"multipart/form-data\" },\n    };\n\n    try {\n      dispatch(getStart);\n      const res = await axios.post(\n        \"http://localhost:3000/logup/checkOtp/\",\n        formData,\n        config\n      );\n      dispatch(getSuccess(res.data));\n    } catch (err) {\n      dispatch(getError(err));\n    }\n  };\n\nexport default logUpSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/khangtran/Documents/GitHub/Motel/client/src/contexts/Account.Context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, createContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AccountContext = /*#__PURE__*/createContext();\n\nfunction AccountProvider({\n  children\n}) {\n  _s();\n\n  const [email, setEmail] = useState();\n  const [phone, setPhone] = useState();\n  const [fullName, setFullName] = useState(\"\");\n  const [pass, setPass] = useState();\n  const [rePass, setRePass] = useState();\n  const [valid, setValid] = useState();\n  const [statusLogIn, setStatusLogIn] = useState(); // const [ , set] = useState();\n  // const [ , set] = useState();\n  // const [ , set] = useState();\n  // const [ , set] = useState();\n\n  const validForm = (...params) => {\n    setValid(true);\n\n    for (let i = 0; i < params.length; i++) {\n      if (!params[i]) {\n        setValid(false);\n      }\n    }\n  };\n\n  const findAccountByEmail = (email, listAccount) => {\n    var result = false;\n\n    for (let i = 0; i < listAccount.length; i++) {\n      if (listAccount[i].email === email) {\n        result = true;\n      }\n    }\n\n    return result; // console.log(result);\n  };\n\n  const findAccountByPhone = (phone, listAccount) => {\n    var result = false;\n\n    if (listAccount.length > 0) {\n      for (let i = 0; i < listAccount.length; i++) {\n        if (listAccount[i].phone === phone) {\n          result = true; // console.log(phone)\n          // console.log(listAccount[i]);\n        }\n      }\n\n      return result;\n    }\n  };\n\n  const findAccountByEmailAndPass = (email, pass, listAccount) => {\n    var result = false; // console.log(email);\n    // console.log(pass);\n\n    for (let i = 0; i < listAccount.length; i++) {\n      if (listAccount[i].email === email && listAccount[i].pass === pass) {\n        result = true;\n      }\n    }\n\n    return result;\n  };\n\n  const test = text => {\n    console.log(text);\n  };\n\n  var value = {\n    phone,\n    setPhone,\n    email,\n    setEmail,\n    pass,\n    setPass,\n    setFullName,\n    fullName,\n    rePass,\n    setRePass,\n    setValid,\n    valid,\n    validForm,\n    test,\n    findAccountByEmail,\n    findAccountByPhone,\n    findAccountByEmailAndPass,\n    statusLogIn,\n    setStatusLogIn\n  };\n  return /*#__PURE__*/_jsxDEV(AccountContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AccountProvider, \"GzvJ19zNJlL1/UXVFrnIiXuIFcc=\");\n\n_c = AccountProvider;\nexport { AccountContext, AccountProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountProvider\");","map":{"version":3,"sources":["/Users/khangtran/Documents/GitHub/Motel/client/src/contexts/Account.Context.js"],"names":["React","useState","createContext","AccountContext","AccountProvider","children","email","setEmail","phone","setPhone","fullName","setFullName","pass","setPass","rePass","setRePass","valid","setValid","statusLogIn","setStatusLogIn","validForm","params","i","length","findAccountByEmail","listAccount","result","findAccountByPhone","findAccountByEmailAndPass","test","text","console","log","value"],"mappings":"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","sourcesContent":["import React, { useState, createContext } from \"react\";\n\nconst AccountContext = createContext();\n\nfunction AccountProvider({ children }) {\n  const [email, setEmail] = useState();\n  const [phone, setPhone] = useState();\n  const [fullName, setFullName] = useState(\"\");\n  const [pass, setPass] = useState();\n  const [rePass, setRePass] = useState();\n  const [valid, setValid] = useState();\n  const [statusLogIn, setStatusLogIn] = useState();\n  // const [ , set] = useState();\n  // const [ , set] = useState();\n  // const [ , set] = useState();\n  // const [ , set] = useState();\n\n  const validForm = (...params) => {\n    setValid(true);\n    for (let i = 0; i < params.length; i++) {\n      if (!params[i]) {\n        setValid(false);\n      }\n    }\n  };\n\n  const findAccountByEmail = (email, listAccount) => {\n    var result = false;\n    for (let i = 0; i < listAccount.length; i++) {\n      if (listAccount[i].email === email) {\n        result = true;\n      }\n    }\n    return result;\n\n    // console.log(result);\n  };\n  const findAccountByPhone = (phone, listAccount) => {\n    var result = false;\n    if (listAccount.length > 0) {\n      for (let i = 0; i < listAccount.length; i++) {\n        if (listAccount[i].phone === phone) {\n          result = true;\n          // console.log(phone)\n          // console.log(listAccount[i]);\n        }\n      }\n      return result;\n    }\n  };\n\n  const findAccountByEmailAndPass = (email, pass, listAccount) => {\n    var result = false;\n    // console.log(email);\n    // console.log(pass);\n    for (let i = 0; i < listAccount.length; i++) {\n      if (listAccount[i].email === email && listAccount[i].pass === pass) {\n        result = true;\n      }\n    }\n    return result;\n  };\n\n  const test = (text) => {\n    console.log(text);\n  };\n\n  var value = {\n    phone,\n    setPhone,\n    email,\n    setEmail,\n    pass,\n    setPass,\n    setFullName,\n    fullName,\n    rePass,\n    setRePass,\n    setValid,\n    valid,\n    validForm,\n    test,\n    findAccountByEmail,\n    findAccountByPhone,\n    findAccountByEmailAndPass,\n    statusLogIn,\n    setStatusLogIn\n  };\n  return (\n    <AccountContext.Provider value={value}>{children}</AccountContext.Provider>\n  );\n}\n\nexport { AccountContext, AccountProvider };\n"]},"metadata":{},"sourceType":"module"}